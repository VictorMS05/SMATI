<%- include("plantillas/cabecera") %>
	<%- include("plantillas/menu") %>
		<style type="text/css">
			.card-body {
				font-size: 1rem;
				padding: 0.3rem 0.4rem;
			}

			.card-body .card-title {
				font-size: 0.9rem;
				margin-bottom: 0.25rem;
			}

			.card-body .card-subtitle {
				font-size: 0.7rem;
			}

			.card-body .card-text {
				text-align: center;
			}

			.card-xbee {
				margin-right: 0.5rem;
				background: #dee2e6;
			}

			.card-xbee .card-title {
				color: #d63384;
			}

			.card-xbee .card-text {
				color: #2196f3;
			}

			.nivel150 {
				color: #ff5722 !important;
			}

			.card-xbee:last-child {
				margin-right: 0;
			}
		</style>

		<div class="container-xxl bd-gutter">
			<div
				class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-0 border-bottom">
				<h3 class="h3">Monitoreo</h3>
			</div>
			<div id="indicadores"
				class="d-flex justify-content-end flex-wrap flex-md-nowrap align-items-center pt-1 pb-1 mb-2">
			</div>
			<div class="img-fluid">
				<div style="height: 400px !important; width: 100%; display: block; position: relative;">
					<canvas id="xbeeValores"></canvas>
				</div>
			</div>
		</div>
		<%- include("plantillas/scripts") %>
			<script src="./chart/chart.v3.9.1.min.js"></script>
			<script src="./socket.io-client/socket.io.min.js"></script>
			<script type="text/javascript">
				const socket = io();
				var graficaValores = null;
				let datosGrafica = {
					registros: [],
					tiempos: [],
					datos: [],
					transformarDatos: function () {
						let xbeeNivel = [];
						let existe = false;
						this.datos = [];
						this.tiempos = [];
						let topRegistros = 50;

						if (this.registros != null && this.registros.length > topRegistros) {
							for (let i = 0; i < this.registros.length - topRegistros; i++) {
								this.registros.shift();
							}
						}

						for (let i = 0; i < this.registros.length; i++) {
							//Armado de los niveles por xbee
							let nombre = this.registros[i].nombre;
							existe = false;

							for (let j = 0; j < xbeeNivel.length; j++) {
								if (xbeeNivel[j][0] == nombre) {
									xbeeNivel[j].push(this.registros[i].nivel);
									existe = true;
									break;
								}
							}

							if (!existe) {
								xbeeNivel.push([nombre, this.registros[i].nivel]);
							}

							//Armando de tiempos
							existe = false;
							let tiempo = '';
							let fechaC = this.registros[i].fecha.split('T');

							if (fechaC != null && fechaC.length == 2) {
								tiempo = fechaC[1].substring(0, 8);
							}

							if (tiempo != '') {
								for (let j = 0; j < this.tiempos.length; j++) {
									if (this.tiempos[j] == tiempo) {
										existe = true;
										break;
									}
								}

								if (!existe) {
									this.tiempos.push(tiempo);
								}
							}
						}

						//Generar los datos por Xbee
						if (xbeeNivel != null) {
							for (let i = 0; i < xbeeNivel.length; i++) {
								console.log("Jorge:" + xbeeNivel[i]);
								let xbeeDatos = {
									backgroundColor: 'rgb(255, 99, 132)',
									borderColor: 'rgb(255, 99, 130)',
									data: []
								};

								for (let j = 0; j < xbeeNivel[i].length; j++) {
									console.log("Fer:" + xbeeNivel[i][j]);
									if (j == 0) {
										console.log("Nombre:" + xbeeNivel[i][0]);
										xbeeDatos.label = xbeeNivel[i][0];
									} else {
										console.log("Dato:" + xbeeNivel[i][j]);
										xbeeDatos.data.push(xbeeNivel[i][j]);
									}
								}
								this.datos.push(xbeeDatos);
							}
						}
					},
					graficar: function () {
						var xbeeValores = document.getElementById('xbeeValores').getContext('2d');
						if (!graficaValores) {
							graficaValores = new Chart(xbeeValores, {
								type: 'line',
								data: {
									labels: this.tiempos,
									datasets: this.datos
								},
								options: {
									responsive: true,
									maintainAspectRatio: false,
									scales: {
										y: {
											beginAtZero: true
										}
									}
								}
							});

							graficaValores.options.animation = false;
						}
						else {
							graficaValores.data.labels = this.tiempos;
							graficaValores.data.datasets = this.datos;
							graficaValores.update();
						}

						if (this.registros != null && this.registros.length > 0) {
							indicador(this.registros[this.registros.length - 1].nombre,
								this.registros[this.registros.length - 1].fecha.split('T')[1].substring(0, 8),
								this.registros[this.registros.length - 1].nivel);
						}
					}
				};

				$(document).ready(() => {
					validaPeticiones();
					cargarRegistros();
				});

				function cargarRegistros() {
					fetch(`${window.location.origin}/api/xbee/registros`)
						.then(response => response.json())
						.then(result => {
							if (!result.error) {
								if (result.registros != null) {
									datosGrafica.registros = result.registros;
									datosGrafica.transformarDatos();
								}

								datosGrafica.graficar();
							}
						})
						.catch(error => console.log(error));
				}

				function validaPeticiones() {
					socket.on('connect', () => {
					});

					socket.on('disconnect', () => {
					});

					socket.on("nuevoRegistro", body => {
						if (body != null && typeof body != "undefined") {
							if (datosGrafica.registros == null || typeof datosGrafica.registros == "undefined") {
								datosGrafica.registros = [];
							}

							datosGrafica.registros.push(body);
							datosGrafica.transformarDatos();
							datosGrafica.graficar();
						}
					})
				}

				function indicador(nombre, hora, nivel) {
					let nombreIndicador = `card${nombre}`;
					let domInd = $(`#${nombreIndicador}`);
					let indidcadores = $("#indicadores");

					if (domInd == null || domInd.length == 0) {
						domInd = $("<div>", { id: nombreIndicador, class: 'card card-xbee' })
							.append($("<div>", { class: 'card-body' })
								.append($("<h5>", { class: 'card-title', text: nombre }))
								.append($("<h6>", { class: 'card-subtitle mb-1 text-muted', text: hora }))
								.append($("<p>", { class: 'card-text' })
									.append('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"'
										+ ' class="bi bi-water" viewBox="0 0 16 16">'
										+ '<path d="M.036 3.314a.5.5 0 0 1 .65-.278l1.757.703a1.5 1.5 0 0 0 1.114 0l1.014-.406a2.5 2.5 0 0 1 1.857 0l1.015.406a1.5 1.5 0 0 0 1.114 0l1.014-.406a2.5 2.5 0 0 1 1.857 0l1.015.406a1.5 1.5 0 0 0 1.114 0l1.757-.703a.5.5 0 1 1 .372.928l-1.758.703a2.5 2.5 0 0 1-1.857 0l-1.014-.406a1.5 1.5 0 0 0-1.114 0l-1.015.406a2.5 2.5 0 0 1-1.857 0l-1.014-.406a1.5 1.5 0 0 0-1.114 0l-1.015.406a2.5 2.5 0 0 1-1.857 0L.314 3.964a.5.5 0 0 1-.278-.65zm0 3a.5.5 0 0 1 .65-.278l1.757.703a1.5 1.5 0 0 0 1.114 0l1.014-.406a2.5 2.5 0 0 1 1.857 0l1.015.406a1.5 1.5 0 0 0 1.114 0l1.014-.406a2.5 2.5 0 0 1 1.857 0l1.015.406a1.5 1.5 0 0 0 1.114 0l1.757-.703a.5.5 0 1 1 .372.928l-1.758.703a2.5 2.5 0 0 1-1.857 0l-1.014-.406a1.5 1.5 0 0 0-1.114 0l-1.015.406a2.5 2.5 0 0 1-1.857 0l-1.014-.406a1.5 1.5 0 0 0-1.114 0l-1.015.406a2.5 2.5 0 0 1-1.857 0L.314 6.964a.5.5 0 0 1-.278-.65zm0 3a.5.5 0 0 1 .65-.278l1.757.703a1.5 1.5 0 0 0 1.114 0l1.014-.406a2.5 2.5 0 0 1 1.857 0l1.015.406a1.5 1.5 0 0 0 1.114 0l1.014-.406a2.5 2.5 0 0 1 1.857 0l1.015.406a1.5 1.5 0 0 0 1.114 0l1.757-.703a.5.5 0 1 1 .372.928l-1.758.703a2.5 2.5 0 0 1-1.857 0l-1.014-.406a1.5 1.5 0 0 0-1.114 0l-1.015.406a2.5 2.5 0 0 1-1.857 0l-1.014-.406a1.5 1.5 0 0 0-1.114 0l-1.015.406a2.5 2.5 0 0 1-1.857 0L.314 9.964a.5.5 0 0 1-.278-.65zm0 3a.5.5 0 0 1 .65-.278l1.757.703a1.5 1.5 0 0 0 1.114 0l1.014-.406a2.5 2.5 0 0 1 1.857 0l1.015.406a1.5 1.5 0 0 0 1.114 0l1.014-.406a2.5 2.5 0 0 1 1.857 0l1.015.406a1.5 1.5 0 0 0 1.114 0l1.757-.703a.5.5 0 1 1 .372.928l-1.758.703a2.5 2.5 0 0 1-1.857 0l-1.014-.406a1.5 1.5 0 0 0-1.114 0l-1.015.406a2.5 2.5 0 0 1-1.857 0l-1.014-.406a1.5 1.5 0 0 0-1.114 0l-1.015.406a2.5 2.5 0 0 1-1.857 0l-1.757-.703a.5.5 0 0 1-.278-.65z" />'
										+ '</svg><span class="nivel"> ' + nivel.toString() + '</span>')));
						$(indidcadores).append(domInd[0]);
					}

					if (domInd.length > 0) {
						$(domInd).find("h6").empty().text(hora);
						$(domInd).find(".nivel").empty().text(' ' + nivel.toString());
					}
				}
			</script>
			<%- include("plantillas/piepagina") %>